generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Status {
  EXPIRED
  TO_DO
  IN_PROGRESS
  COMPLETED
}

model User {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fullname     String   @map("fullname")
  email        String   @unique @map("email")
  password     String   @map("password")
  profileImage String   @map("profile_image")
  createdAt    DateTime @default(now()) @map("createdAt")
  updatedAt    DateTime @updatedAt @map("updatedAt")

  task     Todo[]
  category Category[]

  @@map("user")
}

model Todo {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String    @map("title")
  description String?   @map("description")
  photo       String?   @map("photo")
  dueDate     DateTime? @map("dueDate")
  priority    Priority? @map("priority")
  status      Status    @default(TO_DO) @map("status")
  createdAt   DateTime  @default(now()) @map("createdAt")
  updatedAt   DateTime  @updatedAt @map("updatedAt")

  categoryId String?   @map("categoryId") @db.Uuid
  categories Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  userId String @map("userId") @db.Uuid
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([title])
  @@map("todo")
}

model Category {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String   @map("name")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  task Todo[]

  userId String @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("category")
}
